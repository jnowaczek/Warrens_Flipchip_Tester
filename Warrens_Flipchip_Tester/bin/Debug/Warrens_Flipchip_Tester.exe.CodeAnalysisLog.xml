<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio\2022\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="17.0">
 <Namespaces>
  <Namespace Name="Warrens_Flipchip_Tester">
   <Messages>
    <Message Id="Flipchip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Flipchip' in namespace name 'Warrens_Flipchip_Tester'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'Warrens_Flipchip_Tester'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Warrens_Flipchip_Tester.Exceptions">
   <Messages>
    <Message Id="Flipchip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Flipchip' in namespace name 'Warrens_Flipchip_Tester.Exceptions'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'Warrens_Flipchip_Tester.Exceptions'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Warrens_Flipchip_Tester.Types">
   <Messages>
    <Message Id="Flipchip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Flipchip' in namespace name 'Warrens_Flipchip_Tester.Types'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'Warrens_Flipchip_Tester.Types'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\bin\Debug\Warrens_Flipchip_Tester.exe">
   <Modules>
    <Module Name="warrens_flipchip_tester.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'Warrens_Flipchip_Tester.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="Flipchip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Flipchip' in assembly name 'Warrens_Flipchip_Tester.exe'.</Issue>
      </Message>
      <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="95" Level="Error">Remove the underscores from assembly name 'Warrens_Flipchip_Tester.exe'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Warrens_Flipchip_Tester.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Warrens_Flipchip_Tester.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Warrens_Flipchip_Tester">
       <Types>
        <Type Name="Flipchip_Tester_Form" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Flipchip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Flipchip' in type name 'Flipchip_Tester_Form'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Flipchip_Tester_Form'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="62">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.Flipchip_Tester_Form()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BusSpeedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="77">Method 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="74">Method 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "10000000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="80">Method 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The SPI bus is running at ,  Hz".</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="73">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="76">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="79">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="80">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.BusSpeedChanged(object, EventArgs)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContinueTestAfterStopButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="399">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="406">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Could not connect to the USB/SPI cable.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="415">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Flip the toggle switch and make sure that the amber LED for UUT_PWR goes on.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="431">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SPI Chip Hardware Address Fault.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="414">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The Vpp Power to the FlipChip is not turned on.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="433">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="434">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try running Hardware Address Enable and Test in the Test the Tester tab.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="407">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try unplugging the USB/SPI cable, and the plugging it back in.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="402">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="420">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="425">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFlipChip fault detected.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="392">Method 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nStopped at test vector number ,  of , .\n".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="414">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="433">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="425">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"\nFlipChip fault detected.\n"'.</Issue>
            </Message>
            <Message Id="Vpp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="414">Correct the spelling of the unrecognized token 'Vpp' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="384">Because the behavior of 'Convert.ToInt16(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'Convert.ToInt16(string, IFormatProvider)'. If the result of 'Convert.ToInt16(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="426">Because the behavior of 'Convert.ToInt16(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'Convert.ToInt16(string, IFormatProvider)'. If the result of 'Convert.ToInt16(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="390">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="398">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="386">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="392">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="398">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="426">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.ContinueTestAfterStopButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CycleTheLEDsButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="244">Method 'Flipchip_Tester_Form.CycleTheLEDsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Could not connect to the USB/SPI cable.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="240">Method 'Flipchip_Tester_Form.CycleTheLEDsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Done.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="235">Method 'Flipchip_Tester_Form.CycleTheLEDsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Sending binary pattern to the LEDs\n".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndingVectorNumberTextBox_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="592">Method 'Flipchip_Tester_Form.EndingVectorNumberTextBox_TextChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="591">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.EndingVectorNumberTextBox_TextChanged(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FlipChipTestCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="560">Method 'Flipchip_Tester_Form.FlipChipTestCompleted(object, RunWorkerCompletedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FlipChipTestStatus(System.Object,System.ComponentModel.ProgressChangedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="550">Method 'Flipchip_Tester_Form.FlipChipTestStatus(object, ProgressChangedEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nProcessed test vector # x.\n".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="427">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="265">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="541">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="300">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1000000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="477">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "9999".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="770">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Application Revision Level".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="310">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Bus Speed in Hz".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="632">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Comments".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="408">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Continue Test After Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="438">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Continuously Loop Through Test".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="740">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Cycle The LEDs".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="283">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Device Address".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="376">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Display Test Results for Each Test Vector".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="469">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ending Vector Number".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="364">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "FlipChip Testing".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="178">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Get FTDI USB Driver Versions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="319">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hardware Address Enable and Test".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="754">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Help".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="234">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "IODIR".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="385">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "No".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="447">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "No".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="498">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "No".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="585">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Open Test Vector File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="419">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Pass Count".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="609">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Pin Table".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="155">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Read EEPROM in FTDI USB Devices".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="243">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Read MPC23S17 Registers 100 Times".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="167">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Read MPC23S17 Registers".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="292">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Register Contents in Hex".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="274">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Register".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="522">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Run All Test Vectors".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="552">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Run Next Test Vector".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="575">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save Test Information in Log File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="189">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Scan for FTDI MPSSE USB Devices".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="144">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Scan for FTDI USB Devices".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="564">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start Test, Run The First Vector".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="533">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Starting Vector Number".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="489">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop Test If Fault Detected".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="656">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Test Vectors".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="711">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Test the Tester".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="801">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The New and Improved Warren Stearns Flipchip Tester".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="211">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Turn Off FTDI Red LED".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="200">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Turn On FTDI Red LED".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="255">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Write a singleMPC23S17 Register".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="397">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Yes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="459">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Yes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="510">Method 'Flipchip_Tester_Form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Yes".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="364">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"FlipChip Testing"'.</Issue>
            </Message>
            <Message Id="Flipchip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.Designer.cs" Line="801">Correct the spelling of the unrecognized token 'Flipchip' in the literal '"The New and Improved Warren Stearns Flipchip Tester"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NextTestVectorButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="332">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Could not connect to the USB/SPI cable.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="340">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Flip the toggle switch and make sure that the amber LED for UUT_PWR goes on.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="354">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SPI Chip Hardware Address Fault.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="339">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The Vpp Power to the FlipChip is not turned on.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="356">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="357">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try running Hardware Address Enable and Test in the Test the Tester tab.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="333">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try unplugging the USB/SPI cable, and the plugging it back in.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="344">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="349">Method 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFlipChip fault detected.\n".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="339">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="356">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="349">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"\nFlipChip fault detected.\n"'.</Issue>
            </Message>
            <Message Id="Vpp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="339">Correct the spelling of the unrecognized token 'Vpp' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="319">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="323">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="364">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.NextTestVectorButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenTestVectorFileButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="218">Method 'Flipchip_Tester_Form.OpenTestVectorFileButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="219">Method 'Flipchip_Tester_Form.OpenTestVectorFileButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "9999".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read100kMPC23S17Registersbutton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="167">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The FlipChip Tester Application is 32-bit.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="165">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The FlipChip Tester Application is 64-bit.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="169">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The FlipChip Tester Application version is: , .\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="173">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The SPI bus is running at ,  Hz.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="163">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The Windows Operating System is 32-bit.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="161">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The Windows Operating System is 64-bit.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="170">Method 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The libMPSSEWrapper.dll version is: , .\n".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="167">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The FlipChip Tester Application is 32-bit.\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="165">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The FlipChip Tester Application is 64-bit.\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="169">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The FlipChip Tester Application version is: "'.</Issue>
            </Message>
            <Message Id="libMPSSEWrapper" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="170">Correct the spelling of the unrecognized token 'libMPSSEWrapper' in the literal '"The libMPSSEWrapper.dll version is: "'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="173">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.Read100kMPC23S17Registersbutton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunAllTestVectorsButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="456">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="455">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="487">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Could not connect to the USB/SPI cable.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="496">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Flip the toggle switch and make sure that the amber LED for UUT_PWR goes on.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="511">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SPI Chip Hardware Address Fault.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="495">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The Vpp Power to the FlipChip is not turned on.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="513">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="514">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try running Hardware Address Enable and Test in the Test the Tester tab.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="488">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try unplugging the USB/SPI cable, and the plugging it back in.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="483">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="500">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="505">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFlipChip fault detected.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="474">Method 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nStopped at test vector number ,  of , .\n".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="495">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="513">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="505">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"\nFlipChip fault detected.\n"'.</Issue>
            </Message>
            <Message Id="Vpp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="495">Correct the spelling of the unrecognized token 'Vpp' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="506">Because the behavior of 'Convert.ToInt16(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'Convert.ToInt16(string, IFormatProvider)'. If the result of 'Convert.ToInt16(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="472">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="480">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="468">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="474">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="480">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="506">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.RunAllTestVectorsButton_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunFlipChipTest(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="540">Method 'Flipchip_Tester_Form.RunFlipChipTest(object, DoWorkEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nStarting FlipChip Test Thread.\n".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="540">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"\nStarting FlipChip Test Thread.\n"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartingVectorNumberTextBox_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="581">Method 'Flipchip_Tester_Form.StartingVectorNumberTextBox_TextChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="580">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Flipchip_Tester_Form.StartingVectorNumberTextBox_TextChanged(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartTestButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="261">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="259">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="301">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="270">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Could not connect to the USB/SPI cable.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="278">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Flip the toggle switch and make sure that the amber LED for UUT_PWR goes on.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="292">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SPI Chip Hardware Address Fault.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="277">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "The Vpp Power to the FlipChip is not turned on.\n\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="294">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="295">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try running Hardware Address Enable and Test in the Test the Tester tab.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="271">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Try unplugging the USB/SPI cable, and the plugging it back in.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="282">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFinished with test vectors.\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="287">Method 'Flipchip_Tester_Form.StartTestButton_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "\nFlipChip fault detected.\n".</Issue>
            </Message>
            <Message Id="FlipChip" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="277">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="294">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"Try disconnecting &amp; reconnecting the USB cable and restarting the FlipChip teste..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="287">Correct the spelling of the unrecognized token 'FlipChip' in the literal '"\nFlipChip fault detected.\n"'.</Issue>
            </Message>
            <Message Id="Vpp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="Flipchip_Tester_Form.cs" Line="277">Correct the spelling of the unrecognized token 'Vpp' in the literal '"The Vpp Power to the FlipChip is not turned on.\n\n"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FlipChipTester" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CheckIodirLine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="899">Call the 'ArgumentOutOfRangeException' constructor that contains a message and/or paramName parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloseUSBSpi()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="322">The 'this' parameter (or 'Me' in Visual Basic) of 'FlipChipTester.CloseUSBSpi()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContinuouslyLoopTest" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ContinuouslyLoopTest()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="262">'FlipChipTester.ContinuouslyLoopTest.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CycleTheLEDs()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="963">In method 'FlipChipTester.CycleTheLEDs()', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecodePinStatementLine(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt16(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="845">Because the behavior of 'Convert.ToInt16(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.DecodePinStatementLine(string)' with a call to 'Convert.ToInt16(string, IFormatProvider)'. If the result of 'Convert.ToInt16(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="850">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.DecodePinStatementLine(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayTestResults" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_DisplayTestResults()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="244">'FlipChipTester.DisplayTestResults.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetFtdiDriverVersions()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1042">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1019">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1019">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1019">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1033">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1033">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1033">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.GetFtdiDriverVersions()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTestVectorsHeader()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="772">Modify 'FlipChipTester.GetTestVectorsHeader()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="780">Modify 'FlipChipTester.GetTestVectorsHeader()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HardwareAddressEnable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="804">In method 'FlipChipTester.HardwareAddressEnable()', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.UInt16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="823">Because the behavior of 'ushort.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.HardwareAddressEnable()' with a call to 'ushort.ToString(IFormatProvider)'. If the result of 'ushort.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="825">Because the behavior of 'ushort.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.HardwareAddressEnable()' with a call to 'ushort.ToString(IFormatProvider)'. If the result of 'ushort.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt16.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="823">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.HardwareAddressEnable()' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeTestHardware()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="363">In method 'FlipChipTester.InitializeTestHardware()', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="SpiRegisterContents" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="350">'FlipChipTester.InitializeTestHardware()' declares a variable, 'SpiRegisterContents', of type 'byte[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.UInt16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="387">Because the behavior of 'ushort.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.InitializeTestHardware()' with a call to 'ushort.ToString(IFormatProvider)'. If the result of 'ushort.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NumberOfTestVectorsRead" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_NumberOfTestVectorsRead(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="257">'FlipChipTester.NumberOfTestVectorsRead.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OpenTestVectorFile()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="606">In method 'FlipChipTester.OpenTestVectorFile()', call System.IDisposable.Dispose on object 'TestVectorOpenFileDialog' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="623">Method 'FlipChipTester.OpenTestVectorFile()' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "tst files (*.TST)|*.TST|All files (*.*)|*.*".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="711">Modify 'FlipChipTester.OpenTestVectorFile()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="tst" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="623">Correct the spelling of the unrecognized token 'tst' in the literal '"tst files (*.TST)|*.TST|All files (*.*)|*.*"'.</Issue>
            </Message>
            <Message Id="number" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="649">'FlipChipTester.OpenTestVectorFile()' declares a variable, 'number', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="674">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.OpenTestVectorFile()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenUSBSpi()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="314">The 'this' parameter (or 'Me' in Visual Basic) of 'FlipChipTester.OpenUSBSpi()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessTestVector(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="471">In method 'FlipChipTester.ProcessTestVector(int)', call System.IDisposable.Dispose on object 'SpiGpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="523">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ProcessTestVector(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt16.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="531">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ProcessTestVector(int)' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="539">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ProcessTestVector(int)' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="548">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ProcessTestVector(int)' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read100MPC23S17Registers()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1563">In method 'FlipChipTester.Read100MPC23S17Registers()', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1577">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.Read100MPC23S17Registers()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1578">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.Read100MPC23S17Registers()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadEEPROMInFTDIDevices()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.UInt16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1119">Because the behavior of 'ushort.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'ushort.ToString(IFormatProvider)'. If the result of 'ushort.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1137">Because the behavior of 'ushort.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'ushort.ToString(IFormatProvider)'. If the result of 'ushort.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt16.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1120">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1121">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1138">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1139">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1099">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1115">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1133">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1149">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadEEPROMInFTDIDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadMPC23S17Registers()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1373">In method 'FlipChipTester.ReadMPC23S17Registers()', call System.IDisposable.Dispose on object 'SpiGpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1377">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadMPC23S17Registers()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt16.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1380">Because the behavior of 'ushort.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ReadMPC23S17Registers()' with a call to 'ushort.ToString(string, IFormatProvider)'. If the result of 'ushort.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetSpiBus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1496">'FlipChipTester.ResetSpiBus()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="SpiConfig" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1501">'FlipChipTester.ResetSpiBus()' declares a variable, 'SpiConfig', of type 'FtdiChannelConfig', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1537">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ResetSpiBus()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScanForFtdiDevices()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1059">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1067">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1069">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1071">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1070">Because the behavior of 'uint.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiDevices()' with a call to 'uint.ToString(string, IFormatProvider)'. If the result of 'uint.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScanForFtdiMpsseDevices()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1187">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiMpsseDevices()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1189">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiMpsseDevices()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1191">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiMpsseDevices()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1188">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiMpsseDevices()' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1175">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiMpsseDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1185">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.ScanForFtdiMpsseDevices()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLedState(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1612">In method 'FlipChipTester.SetLedState(string, string)', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1663">Modify 'FlipChipTester.SetLedState(string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetupIodirRegisters()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="435">In method 'FlipChipTester.SetupIodirRegisters()', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpiHandle" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'FlipChipTester.SpiHandle' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TurnOffLEDs()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1331">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.TurnOffLEDs()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1334">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.TurnOffLEDs()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1337">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.TurnOffLEDs()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1300">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.TurnOffLEDs()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TurnOnLEDs()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="SpiConfig" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1222">'FlipChipTester.TurnOnLEDs()' declares a variable, 'SpiConfig', of type 'FtdiChannelConfig', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1262">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.TurnOnLEDs()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1233">Because the behavior of 'uint.ToString()' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.TurnOnLEDs()' with a call to 'uint.ToString(IFormatProvider)'. If the result of 'uint.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#unmanagedResource" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FlipChipTester.unmanagedResource' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteSingleMPC23S17Register(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1401">'FlipChipTester.WriteSingleMPC23S17Register(string, string, string)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1475">In method 'FlipChipTester.WriteSingleMPC23S17Register(string, string, string)', call System.IDisposable.Dispose on object 'Gpio0' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Byte.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1482">Because the behavior of 'byte.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.WriteSingleMPC23S17Register(string, string, string)' with a call to 'byte.ToString(string, IFormatProvider)'. If the result of 'byte.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="FlipChipTester.cs" Line="1482">Because the behavior of 'byte.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FlipChipTester.WriteSingleMPC23S17Register(string, string, string)' with a call to 'byte.ToString(string, IFormatProvider)'. If the result of 'byte.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'MCP' in type name 'MCP23S17' by changing it to 'Mcp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(libMPSSEWrapper.Types.FtdiChannelConfig,libMPSSEWrapper.Spi.SpiConfiguration)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="spi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="34">In method 'MCP23S17.MCP23S17(FtdiChannelConfig, SpiConfiguration)', correct the spelling of 'spi' in parameter name 'spiConfig' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadDoubleRegister(System.UInt16,System.UInt16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Device" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="552">In member 'MCP23S17.ReadDoubleRegister(ushort, ushort)', correct the casing of 'Device' in parameter name 'DeviceAddress' by changing it to 'device'.</Issue>
            </Message>
            <Message Id="Register" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="552">In member 'MCP23S17.ReadDoubleRegister(ushort, ushort)', correct the casing of 'Register' in parameter name 'Register' by changing it to 'register'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteDoubleRegister(System.UInt16,System.UInt16,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Device" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="574">In member 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])', correct the casing of 'Device' in parameter name 'DeviceAddress' by changing it to 'device'.</Issue>
            </Message>
            <Message Id="Register" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="574">In member 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])', correct the casing of 'Register' in parameter name 'Register' by changing it to 'register'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="574">In member 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])', correct the casing of 'Register' in parameter name 'RegisterContents' by changing it to 'register'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="585">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])' passes parameter name 'Register' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="588">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])' passes parameter name 'RegisterContents' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="579">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])' passes 'Device Address' as the 'paramName' argument to a 'ArgumentOutOfRangeException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="585">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])' passes 'The Register must be an even number.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="588">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])' passes 'The RegisterContents must be a two byte array.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="587">In externally visible method 'MCP23S17.WriteDoubleRegister(ushort, ushort, byte[])', validate parameter 'RegisterContents' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteDoubleRegister(System.UInt16,System.UInt16,System.UInt16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Device" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="608">In member 'MCP23S17.WriteDoubleRegister(ushort, ushort, ushort)', correct the casing of 'Device' in parameter name 'DeviceAddress' by changing it to 'device'.</Issue>
            </Message>
            <Message Id="Register" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="608">In member 'MCP23S17.WriteDoubleRegister(ushort, ushort, ushort)', correct the casing of 'Register' in parameter name 'Register' by changing it to 'register'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="608">In member 'MCP23S17.WriteDoubleRegister(ushort, ushort, ushort)', correct the casing of 'Register' in parameter name 'RegisterContents' by changing it to 'register'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="619">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, ushort)' passes parameter name 'Register' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="613">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, ushort)' passes 'Device Address' as the 'paramName' argument to a 'ArgumentOutOfRangeException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="619">Method 'MCP23S17.WriteDoubleRegister(ushort, ushort, ushort)' passes 'The Register must be an even number.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteReadFiveRegisters()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="733">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'MCP23S17.WriteReadFiveRegisters()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="734">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'MCP23S17.WriteReadFiveRegisters()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester" File="MicrochipMCP23S17.cs" Line="735">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'MCP23S17.WriteReadFiveRegisters()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+DEFVAL" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.DEFVAL' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="DEFVAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEFVAL' in type name 'MCP23S17.DEFVAL' by changing it to 'Defval'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DEF0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF0' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF1' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF2' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF3' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF4' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF5' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF6' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEF7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEF' in member name 'MCP23S17.DEFVAL.DEF7' by changing it to 'Def'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+GPINTEN" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.GPINTEN' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="GPINTEN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'GPINTEN' in type name 'MCP23S17.GPINTEN' by changing it to 'Gpinten'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GPINT0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT0' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT1' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT2' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT3' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT4' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT5' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT6' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINT7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINT' in member name 'MCP23S17.GPINTEN.GPINT7' by changing it to 'Gpint'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+GPIO" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.GPIO' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="GPIO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'GPIO' in type name 'MCP23S17.GPIO' by changing it to 'Gpio'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MCP23S17+GPPU" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.GPPU' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="GPPU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'GPPU' in type name 'MCP23S17.GPPU' by changing it to 'Gppu'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MCP23S17+INTCAP" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.INTCAP' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="INTCAP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INTCAP' in type name 'MCP23S17.INTCAP' by changing it to 'Intcap'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ICP0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP0' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP1' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP2' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP3' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP4' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP5' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP6' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ICP7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ICP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ICP' in member name 'MCP23S17.INTCAP.ICP7' by changing it to 'Icp'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+INTCON" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.INTCON' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="INTCON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INTCON' in type name 'MCP23S17.INTCON' by changing it to 'Intcon'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IOC0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC0' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC1' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC2' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC3' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC4' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC5' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC6' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOC7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOC' in member name 'MCP23S17.INTCON.IOC7' by changing it to 'Ioc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+INTF" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.INTF' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="INTF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INTF' in type name 'MCP23S17.INTF' by changing it to 'Intf'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#INT0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT0' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT1' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT2' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT3' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT4' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT5' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT6' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INT7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'MCP23S17.INTF.INT7' by changing it to 'Int'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+IOCON" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.IOCON' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="IOCON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'IOCON' in type name 'MCP23S17.IOCON' by changing it to 'Iocon'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BANK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BANK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BANK' in member name 'MCP23S17.IOCON.BANK' by changing it to 'Bank'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DISSLW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DISSLW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DISSLW' in member name 'MCP23S17.IOCON.DISSLW' by changing it to 'Disslw'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HAEN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HAEN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HAEN' in member name 'MCP23S17.IOCON.HAEN' by changing it to 'Haen'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INTPOL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INTPOL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INTPOL' in member name 'MCP23S17.IOCON.INTPOL' by changing it to 'Intpol'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIRROR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MIRROR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIRROR' in member name 'MCP23S17.IOCON.MIRROR' by changing it to 'Mirror'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ODR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ODR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ODR' in member name 'MCP23S17.IOCON.ODR' by changing it to 'Odr'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SEQOP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SEQOP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SEQOP' in member name 'MCP23S17.IOCON.SEQOP' by changing it to 'Seqop'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MCP23S17+IODIR" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.IODIR' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="IODIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'IODIR' in type name 'MCP23S17.IODIR' by changing it to 'Iodir'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MCP23S17+IPOL" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.IPOL' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="IPOL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'IPOL' in type name 'MCP23S17.IPOL' by changing it to 'Ipol'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MCP23S17+OLAT" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.OLAT' is singular, change it to a plural form.</Issue>
          </Message>
          <Message Id="OLAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'OLAT' in type name 'MCP23S17.OLAT' by changing it to 'Olat'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MCP23S17+Register" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'MCP23S17.Register', change the name of 'MCP23S17.Register.IODIR' to 'None'.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'MCP23S17.Register' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DEFVAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFVAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFVAL' in member name 'MCP23S17.Register.DEFVAL' by changing it to 'Defval'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPINTEN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPINTEN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPINTEN' in member name 'MCP23S17.Register.GPINTEN' by changing it to 'Gpinten'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPIO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPIO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPIO' in member name 'MCP23S17.Register.GPIO' by changing it to 'Gpio'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GPPU" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GPPU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GPPU' in member name 'MCP23S17.Register.GPPU' by changing it to 'Gppu'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INTCAP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INTCAP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INTCAP' in member name 'MCP23S17.Register.INTCAP' by changing it to 'Intcap'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INTCON" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INTCON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INTCON' in member name 'MCP23S17.Register.INTCON' by changing it to 'Intcon'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#INTF" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INTF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INTF' in member name 'MCP23S17.Register.INTF' by changing it to 'Intf'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IOCON" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IOCON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IOCON' in member name 'MCP23S17.Register.IOCON' by changing it to 'Iocon'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IODIR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IODIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IODIR' in member name 'MCP23S17.Register.IODIR' by changing it to 'Iodir'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IPOL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IPOL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IPOL' in member name 'MCP23S17.Register.IPOL' by changing it to 'Ipol'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OLAT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OLAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OLAT' in member name 'MCP23S17.Register.OLAT' by changing it to 'Olat'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Warrens_Flipchip_Tester.Exceptions">
       <Types>
        <Type Name="FlipchipTesterException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Flipchip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Flipchip' in type name 'FlipchipTesterException'.</Issue>
          </Message>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'FlipchipTesterException': protected FlipchipTesterException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'FlipchipTesterException': public FlipchipTesterException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'FlipchipTesterException': public FlipchipTesterException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'FlipchipTesterException': public FlipchipTesterException(String, Exception).</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Warrens_Flipchip_Tester.Types.FlipChipTestResult)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Exceptions" File="FlipChipFaultDetectedException.cs" Line="47">In method 'FlipchipTesterException.FlipchipTesterException(FlipChipTestResult)', correct the spelling of 'param' in parameter name 'paramName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Warrens_Flipchip_Tester.Types.FlipChipTestResult,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Test" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Exceptions" File="FlipChipFaultDetectedException.cs" Line="57">In member 'FlipchipTesterException.FlipchipTesterException(FlipChipTestResult, string)', correct the casing of 'Test' in parameter name 'TestMessage' by changing it to 'test'.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Exceptions" File="FlipChipFaultDetectedException.cs" Line="57">In method 'FlipchipTesterException.FlipchipTesterException(FlipChipTestResult, string)', correct the spelling of 'param' in parameter name 'paramName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Warrens_Flipchip_Tester.Properties">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Resources' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Culture" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Culture()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Properties" File="Resources.Designer.cs" Line="55">'Resources.Culture.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Culture(System.Globalization.CultureInfo)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Properties" File="Resources.Designer.cs" Line="58">'Resources.Culture.set(CultureInfo)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ResourceManager" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ResourceManager()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Properties" File="Resources.Designer.cs" Line="40">'Resources.ResourceManager.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Default" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Default()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\LARS Lab\Source\Repos\Warrens_Flipchip_Tester\Warrens_Flipchip_Tester\Properties" File="Settings.Designer.cs" Line="21">'Settings.Default.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Warrens_Flipchip_Tester.Types">
       <Types>
        <Type Name="FlipChipTestResult" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IoError" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Io" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Io' in member name 'FlipChipTestResult.IoError' by changing it to 'IO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpiTestFailed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Spi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Spi' in member name 'FlipChipTestResult.SpiTestFailed' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VppPowerIsOff" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Vpp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2022-03-22 18:34:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vpp' in member name 'FlipChipTestResult.VppPowerIsOff' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="FlagsRename">In enum {0}, change the name of {1} to 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
   <Name>Flags enums should have plural names</Name>
   <Description>An enumeration marked with FlagsAttribute should have a plural name.</Description>
   <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Assembly">Remove the underscores from assembly name {0}.</Resolution>
   <Resolution Name="Namespace">Remove the underscores from namespace name '{0}'.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>Implement standard exception constructors</Name>
   <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
   <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Resolution Name="NoArguments">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006">
   <Name>Use SafeHandle to encapsulate native resources</Name>
   <Description>Use of IntPtr in managed code may indicate a potential security and reliability problem. All uses of IntPtr must be reviewed to determine whether use of a SafeHandle (or similar technology) is required in its place. Problems will occur if the IntPtr represents some native resource (memory, file handle, socket etc.) that managed code is considered to own. I.e. managed code is expected to in some way release the resource and failure to do so would cause resource leakage. In such scenarios security or reliability problems will also exist if multithreaded access is allowed to the IntPtr and a means of releasing the resource represented by the IntPtr. These problems involve recycling of the IntPtr value on resource release while simultaneous use of the resource is being made on another thread, leading to race conditions where one thread can read or write data associated with the wrong resource. For example, if your type stores an OS handle as an IntPtr and allows users to call both Close and any other method using that handle simultaneously (without some kind of synchronization), your code has a handle recycling problem, which causes data corruption and often a security vulnerability. SafeHandle (and its sibling class CriticalHandle) provide a mechanism for encapsulating a native handle to a resource so that such threading problems can be avoided (along with other issues such as the need to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods; ie, you can often remove calls to GC.KeepAlive). There are performance overheads implicit in using SafeHandle (and, to a lesser degree, CriticalHandle) which can often be mitigated through careful design.</Description>
   <Resolution Name="Default">Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182294.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="reliabilityrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
